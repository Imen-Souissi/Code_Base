<?php include(__DIR__ . "/layout/layout.phtml"); ?>

<?php
$gem_ns = $this->config()->getConfig('auth', 'gem_ns');
$escaper = new Zend\Escaper\Escaper('utf-8');
$formatter = $this->formatter();
?>

<?php $this->placeholder('heading')->captureStart(); ?>
View All Archived Labviews
<?php $this->placeholder('heading')->captureEnd() ;?>

<?php $this->placeholder('breadcrumb')->captureStart(); ?>
<li class="active">
<a href="<?php echo $this->basePath('gem/labviews/'); ?>">
View All Archived Labviews
</a>
</li>
<?php $this->placeholder('breadcrumb')->captureEnd(); ?>

<?php $this->placeholder('header')->captureStart('SET'); ?>
<h1>
	Archived Labviews
</h1>
<?php $this->placeholder('header')->captureEnd(); ?>

<?php
	$query_fields = array(
		'user' => 'user_id',
		'group' => 'group_id',
		'department' => 'department_id',
		'project' => 'project_id',
		'testbed' => 'testbed_id',
		'site' => 'site_id',
		'lab' => 'lab_id',
		'rack' => 'rack_id',
		'device' => 'device_id',
	);

	$device_query = array();
	$displays = array(
		'site' => array(
			'placeholder' => true
		),
		'lab' => array(
			'placeholder' => true
		),
		'rack' => array(
			'placeholder' => true
		),
		'device' => array(
			'placeholder' => true
		),
		'user' => array(
			'placeholder' => true
		),
		'group' => array(
			'placeholder' => true
		),
		'department' => array(
			'placeholder' => true
		),
		'project' => array(
			'placeholder' => true
		),
		'testbed' => array(
			'placeholder' => true
		),
	);

	foreach($query_fields as $field => $field_id) {
		$options = array();
		$always_include = false;

		if(is_array($field_id)) {
			if(isset($field_id['always_include'])) {
				$always_include = $field_id['always_include'];
			}

			$options = $field_id;
			$field_id = $options['field'];
		}

		$options = (empty($options)) ? array() : $options;

		if(!is_string($field)) {
			$field = $field_id;
		}

		if($this->$field || $always_include) {
			$value = $this->$field;
			$query[$field] = $value;

			if($options['formatter']) {
				$value = call_user_func($options['formatter'], $value);
			}

			$device_query[$field_id] = $value;
		}
	}

	$urldata = array(
		'route' => 'gem/default',
		'match' => array (
			'controller' => 'labviews',
			'action' => 'index',
		),
		'query' => $query
	);
?>

<?php $this->placeholder('script')->captureStart(); ?>
<script type="text/javascript">
	$(document).ready(function() {
		// initilize the sidebar2
		$('#sidebar2').insertBefore('.page-content');//.ace_sidebar('collapse', false);
		$('#navbar').addClass('h-navbar');
		$('.footer').insertAfter('.page-content');
		$('.page-content').addClass('main-content');
		$('.menu-toggler[data-target="#sidebar2"]').insertBefore('.navbar-brand');
		$('#sidebar2[data-sidebar-hover=true]').ace_sidebar_hover('reset');
		$('#sidebar2[data-sidebar-scroll=true]').ace_sidebar_scroll('reset', true);

		// when the filter expressions is hidden/shown
		$('#filter_expressions').collapse().on('hidden.bs.collapse shown.bs.collapse', function (e) {
			$(this).css('display', 'block');
		}).on('hide.bs.collapse show.bs.collapse', function(e) {
			if (e.type == 'hide') {
				$('#filter_expressions_icon').removeClass('fa-minus').addClass('fa-plus');
				$('#filter_expressions_word').html('Show');
			} else {
				$('#filter_expressions_icon').removeClass('fa-plus').addClass('fa-minus');
				$('#filter_expressions_word').html('Hide');
			}
		});

		var table = $("#labviews").DataTable({
			processing: true,
			serverSide: true,
			ajax: {
				data: function(d) {
					$.datatables_utils.normalize_data(d);
					<?php foreach($device_query as $field => $value) { ?>
					d['<?php echo $field; ?>'] = '<?php echo $value; ?>';
					<?php } ?>

					<?php if ($this->keywords) { ?>
					d['name'] = '*<?php echo $this->keywords; ?>*';
					<?php } ?>
					// I added this
					 d['description'] = 'Auto generated*';
				},
				url: "<?php echo $this->basePath('gem/rest/labviews/'); ?>"
			},
			oLanguage: {
				sEmptyTable: "No lab views matched",
				sProcessing: ""
			},
			oSearch: {
				sSearch: "<?php echo $escaper->escapeJs($this->keywords); ?>"
			},
			iDisplayLength: 25,
			stateSave: false,
			deferRender: true,
			searchDelay: 500,
			responsive: {
				details: {
					renderer: function(api, row, columns) {
						return $.datatables_utils.responsive_renderer(api, row, columns, table);
					}
				}
			},
			columns: [
				{ data: 'id', orderable: false, searchable: false, render: $.datatables_utils.format_empty, className: 'control' },
				{ data: 'id', orderable: false, searchable: false, render: function(val, type, data, options) {
					var editHtml = '';
					var deleteHtml = '';

                    <?php if ($this->authorization()->isPermitted('Gem::Labviews', 'edit', $gem_ns)) { ?>
                    editHtml += "<li>"
                        + "<a data-rel='tooltip' href='<?php echo $this->basePath('gem/labviews/edit/'); ?>" + val + "'>"
                            + "<span class='blue'>"
                                + "<i class='ace-icon fa fa-edit bigger-120'></i>"
                                + " Edit"
                            + "</span>"
                        + "</a>"
                    + "</li>";
                    <?php } ?>

                    <?php if($this->authorization()->isPermitted('Gem::Labviews', 'delete', $gem_ns)) { ?>
                    deleteHtml += "<li>"
                        + "<a data-rel='tooltip' href='javascript: void(0);' onclick=\"deleteLabview('" + options.row + "')\">"
                            + "<span class='red'>"
                                + "<i class='ace-icon fa fa-trash bigger-120'></i>"
                                + " Delete"
                            + "</span>"
                        + "</a>"
                    + "</li>";
                    <?php } ?>

					return "<div class='inline pos-rel'>"
								+ "<button class='btn btn-minier btn-yellow dropdown-toggle' data-toggle='dropdown' data-position='auto'>"
									+ "Actions "
									+ "<i class='ace-icon fa fa-caret-down icon-only bigger-120'></i>"
								+ "</button>"
								+ "<ul class='dropdown-menu dropdown-only-icon dropdown-yellow dropdown-menu-right dropdown-caret dropdown-close'>"
									<?php if ($this->authorization()->isPermitted('Gem::Labviews', 'view', $gem_ns)) { ?>
									+ "<li>"
										+ "<a data-rel='tooltip' href='<?php echo $this->basePath('gem/labviews/view/'); ?>" + val + "'>"
											+ "<span class='green'>"
												+ "<i class='ace-icon fa fa-image bigger-120'></i>"
												+ " View"
											+ "</span>"
										+ "</a>"
									+ "</li>"
									<?php } ?>
									+ editHtml
									+ deleteHtml
								+ "</ul>"
							+ "</div>";
				}, className: 'action-col all' },
				{ data: 'name', searchable: true, render: function(val, type, data) {
					<?php if($this->authorization()->isPermitted('Gem::Labviews', 'view', $gem_ns)) { ?>
					return "<a href='<?php echo $this->basePath('gem/labviews/view/'); ?>" + data.id + "'>" + val + "</a>";
					<?php } else { ?>
					return val;
					<?php } ?>
				}, className: 'all' },
				{ data: 'description', searchable: true },
				{ data: 'total_users', searchable: false, render: $.datatables_utils.format_number },
				{ data: 'total_groups', searchable: false, render: $.datatables_utils.format_number },
				{ data: 'total_departments', searchable: false, render: $.datatables_utils.format_number },
				{ data: 'total_projects', searchable: false, render: $.datatables_utils.format_number },
				{ data: 'total_testbeds', searchable: false, render: $.datatables_utils.format_number },
				{ data: 'total_sites', searchable: false, render: $.datatables_utils.format_number },
				{ data: 'total_labs', searchable: false, render: $.datatables_utils.format_number },
				{ data: 'total_racks', searchable: false, render: $.datatables_utils.format_number },
				{ data: 'total_devices', searchable: false, render: $.datatables_utils.format_number }
			],
			order: [[2, "asc"]],
			fnPreDrawCallback: function() {
				$("#labviews_info").html("Updating lab views...");
				return true;
			},
			fnInitComplete: function() {
				var api = $(this).dataTable().api();
				var html = '<form id="search_form" class="form-horizontal" method="get">';
					html += '<div class="form-group">';
						html += '<div class="input-group">';
							html += '<input type="text" class="keyword" name="keywords" value="<?php echo $escaper->escapeHtml($this->keywords); ?>" placeholder="Search keywords" />';
							html += '<span class="input-group-btn">';
								html += '<div class="btn-group">';
									html += '<button class="btn btn-xs btn-primary" type="submit">Search</button>';
								html += '</div>';
							html += '</span>';
						html += '</div>';
					html += '</div>';
				html += "</form>";

				$("#labviews_filter").html(html);

				$.validate_utils.create('#search_form', {}, function(form) {
					$($(form).serializeArray()).each(function(i, item) {
						if (item.name == 'keywords') {
							$('#keywords').val(item.value);
						} else if (item.name == 'field') {
							$('#field').val(item.value);
						}
					});

					// submit the filter form
					$('#filter').submit();

					return false;
				});
			}
		}).on('order.dt', function(e, table, order) {
			var query = $.extend({
				_: 1
			}, table.oAjaxData);

			delete query.start;
			delete query.length;
			$('#labviews_export_link').remove();
			$('#labviews_paginate').prepend("<a class=\"btn btn-sm btn-success btn-bold align-top\" "
				+ "id=\"labviews_export_link\" "
				+ "href=\"" + table.ajax.url.replace('/rest/', '/export/') + '?' + $.param(query) + "\" >"
					+ "<i class=\"ace-icon fa fa-file-excel-o\"></i> Excel Export"
				+ "</a>");
		});

		var selects = [{
			id: 'site',
			url: '<?php echo $this->basePath("gem/rest/sites/"); ?>',
			onChange: function(e) {
				// reset the lab filter
				if (e.val == null || e.val == '') {
					$('#lab').prop('disabled', true);
				} else {
					$('#lab').prop('disabled', false);
				}

				$("#lab").select2('val', null);
			},
			onInitData: function(item) {
				$('#site_display').text(item.name);
			},
			onData: function(data) {
				data['retired'] = 0;
			}
		}, {
			id: 'lab',
			url: '<?php echo $this->basePath("gem/rest/labs/"); ?>',
			onChange: function(e) {
				// reset the rack filter
				if (e.val == null || e.val == '') {
					$('#rack').prop('disabled', true);
				} else {
					$('#rack').prop('disabled', false);
				}

				$("#rack").select2('val', null);
			},
			onData: function(data) {
				data['retired'] = 0;
				var site_id = $("#site").val();
				if (site_id) {
					data['site_id'] = site_id;
				} else {
					data['!site_id'] = '';
				}

				data['!name'] = '';
			},
			onInitData: function(item) {
				$('#lab_display').text(item.name);
			}
		}, {
			id: 'rack',
			url: '<?php echo $this->basePath("gem/rest/racks/"); ?>',
			onChange: function(e) {
				// reset the rack_end filter
				if (e.val == null || e.val == '') {
					$('#rack_end').prop('disabled', true);
				} else {
					$('#rack_end').prop('disabled', false);
				}

				$("#rack_end").select2('val', null);
			},
			onData: function(data) {
				data['retired'] = 0;
				var site_id = $("#site").val();
				if (site_id) {
					data['site_id'] = site_id;
				} else {
					data['!site_id'] = '';
				}

				var lab_id = $("#lab").val();
				if (lab_id) {
					data['lab_id'] = lab_id;
				} else {
					data['!lab_id'] = '';
				}

				data['!name'] = '';
			},
			onInitData: function(item) {
				$('#rack_display').text(item.name);
			}
		}, {
			id: 'device',
			url: '<?php echo $this->basePath('gem/rest/devices/'); ?>',
			display: 'name',
			onResult: function(item) {
                var text = '';

                if (item.name) {
                    text = [item.name];
                } else {
                    text = [item.identifier, item.manufacturer, item.model];
                }

				return {
					id: item.id,
					text: text.join(' / ')
				};
			},
			onData: function(data) {
                data['retired'] = 0;
				data['name|identifier|manufacturer|model'] = data['name'];
				delete data['name'];
			}
		}, {
			id: 'user',
			url: '<?php echo $this->basePath('hr/rest/hr-users/'); ?>',
			display: 'display_name',
			onData: function(data) {
				data['terminated'] = 0;
			}
		}, {
			id: 'group',
			url: '<?php echo $this->basePath('hr/rest/hr-groups/'); ?>'
		}, {
			id: 'department',
			url: '<?php echo $this->basePath('hr/rest/hr-depts/'); ?>',
			display: 'display_name'
		}, {
			id: 'project',
			url: '<?php echo $this->basePath('project/rest/projects/'); ?>',
			display: 'name',
			onData: function(data) {
                data['status_is_final'] = 0;
			}
		}, {
			id: 'testbed',
			url: '<?php echo $this->basePath('gem/rest/testbeds/'); ?>',
			display: 'name',
			onData: function(data) {
                data['status'] = 'ACTIVE';
			}
		}];

		$.select2_utils.create(selects, 25);
	});

	function resetFilter() {
		// grab all the fields from the form
		$($("#filter").serializeArray()).each(function(i, info) {
			var ele = $("#filter [name=" + info.name + "]");
			if ($(ele).data('select2')) {
				$(ele).select2('val', null);
			} else {
				$(ele).val(null);
			}
		});

		$("#filtering").val(1);
		$("#filter").submit();
	}
</script>
<?php $this->placeholder('script')->captureEnd(); ?>

<?php $this->placeholder('style')->captureStart(); ?>
<style type="text/css">
	@media (min-width: 768px) {
		input.keyword {
			width: 350px !important;
		}
	}
</style>
<?php $this->placeholder('style')->captureEnd(); ?>

<?php $this->placeholder('content')->captureStart('SET'); ?>
<div class="hidden">
	<button data-target="#sidebar2" type="button" class="pull-left menu-toggler navbar-toggle" title="Show filter options">
		<span class="sr-only">Toggle sidebar</span>
		<i class="ace-icon fa fa-filter white bigger-125"></i>
	</button>
	<div id="sidebar2" class="sidebar responsive">
		<div class="sidebar-toggle sidebar-collapse">
			<i class="ace-icon fa fa-angle-double-left" data-icon1="ace-icon fa fa-angle-double-left" data-icon2="ace-icon fa fa-angle-double-right"></i>
		</div>
		<div class="space-6"></div>

		<form id="filter" action="<?php echo $this->url($urldata['route'], $urldata['match']); ?>" method="get" class="">
			<input type="hidden" name="filtering" id="filtering" value="1" />
			<input type="hidden" name="keywords" id="keywords" value="<?php echo $escaper->escapeHtml($this->keywords); ?>" />
			<div class="form-group">
				<label class=control-label" for="user">User</label>
				<input name="user"
					   id="user"
					   type="hidden"
					   placeHolder="User"
					   value="<?php echo $this->user; ?>"
					   class="scrollable width-100" />
			</div>

			<div class="form-group">
				<label class=control-label" for="group">Group</label>
				<input name="group"
					   id="group"
					   type="hidden"
					   placeHolder="Group"
					   value="<?php echo $this->group; ?>"
					   class="scrollable width-100" />
			</div>

			<div class="form-group">
				<label class=control-label" for="department">Department</label>
				<input name="department"
					   id="department"
					   type="hidden"
					   placeHolder="Department"
					   value="<?php echo $this->department; ?>"
					   class="scrollable width-100" />
			</div>

			<div class="form-group">
				<label class=control-label" for="project">Project</label>
				<input name="project"
					   id="project"
					   type="hidden"
					   placeHolder="Project"
					   value="<?php echo $this->project; ?>"
					   class="scrollable width-100" />
			</div>

			<div class="form-group">
				<label class=control-label" for="testbed">Testbed</label>
				<input name="testbed"
					   id="testbed"
					   type="hidden"
					   placeHolder="Testbed"
					   value="<?php echo $this->testbed; ?>"
					   class="scrollable width-100" />
			</div>

			<hr style="margin: 10px 5px 10px 5px; border-color: #DDD;" />

			<div class="form-group">
				<label class=control-label" for="site">Site</label>
				<input name="site"
					   id="site"
					   type="hidden"
					   placeHolder="Site"
					   value="<?php echo $this->site; ?>"
					   class="scrollable width-100" />
			</div>

			<div class="form-group">
				<label class=control-label" for="lab">Lab</label>
				<input name="lab"
					   id="lab"
					   type="hidden"
					   placeHolder="Lab"
					   value="<?php echo $this->lab; ?>"
					   class="scrollable width-100"
					   <?php if (empty($this->site)) { ?>
					   disabled="disabled"
					   <?php } ?> />
			</div>

			<div class="form-group">
				<label class=control-label" for="rack">Rack</label>
				<input name="rack"
					   id="rack"
					   type="hidden"
					   placeholder="Rack"
					   value="<?php echo $this->rack; ?>"
					   class="scrollable width-100"
					   <?php if (empty($this->lab)) { ?>
					   disabled="disabled"
					   <?php } ?> />
			</div>

			<div class="form-group">
				<label class=control-label" for="device">Device</label>
				<input name="device"
					   id="device"
					   type="hidden"
					   placeholder="Device"
					   value="<?php echo $this->device; ?>"
					   class="scrollable width-100" />
			</div>

			<div class="form-group align-center">
				<button class="btn btn-xs"
						type="button"
						onclick="resetFilter()">
					<i class="ace-icon fa fa-remove align-top bigger-125"></i>
					Reset
				</button>
				<button class="btn btn-xs btn-primary"
						type="submit">
					<i class="ace-icon fa fa-check align-top bigger-125"></i>
					Filter
				</button>
			</div>
		</form>
	</div>
</div>

<?php if (count($device_query) > 0) { ?>
<div class="row">
	<div class="col-xs-12">
		<a href="#filter_expressions" data-toggle="collapse">
			<i class="ace-icon fa fa-plus" id="filter_expressions_icon"></i>
			<span id="filter_expressions_word">Show</span> Filter Expressions
		</a>
		<div id="filter_expressions" class="collapse in col-sm-12" style="display: none; padding-left: 30px;">
			<?php if ($query) { ?>
				<ul class="list-inline">
				<?php foreach($query as $field => $value) { ?>
					<?php
						$field_display = ($displays[$field]['display']) ? $displays[$field]['display'] : ucwords(str_replace('_', ' ', $field));
						$field_expr = ($displays[$field]['expression']) ? $displays[$field]['expression'] : 'equal';
						$field_placeholder = ($displays[$field]['placeholder']) ? $displays[$field]['placeholder'] : null;
						if($displays[$field]['ignore'] === true) {
							continue;
						}
					?>
					<li>
						<?php if ($displays[$field]['formatter']) { ?>
							<?php
								$ret_value = $displays[$field]['formatter']($value, $this);
								if(!empty($ret_value)) {  ?>
									<i class="ace-icon fa fa-angle-double-right blue"></i>
									<?php echo $ret_value; ?>
								<?php } ?>
						<?php } else { ?>
							<i class="ace-icon fa fa-angle-double-right blue"></i>
							<?php
								if($displays[$field]['placeholder'] === true) {
									$value = "<span id='{$field}_display'></span>";
								}
								echo $this->queryExpression()->format($field_display, $field_expr, $value);
							?>
						<?php } ?>
					</li>
				<?php } ?>
				</ul>
			<?php } ?>
		</div>
	</div>
</div>
<?php } ?>

<div class="row">
	<div class="col-xs-12">
		<div class="widget-body no-padding">
			<div class="widget-table no-padding">
				<table id="labviews" class="table table-striped table-hover" width="100%">
					<thead>
						<tr>
							<th style="width: 30px;"></th>
							<th style="min-width: 40px; max-width: 40px;"></th>
							<th style="min-width: 120px;">Name</th>
							<th style="min-width: 200px;">Description</th>
							<th style="min-width: 100px;"># Users</th>
							<th style="min-width: 100px;"># Groups</th>
							<th style="min-width: 120px;"># Departments</th>
							<th style="min-width: 120px;"># Projects</th>
							<th style="min-width: 120px;"># Testbeds</th>
							<th style="min-width: 100px;"># Sites</th>
							<th style="min-width: 100px;"># Labs</th>
							<th style="min-width: 100px;"># Racks</th>
							<th style="min-width: 100px;"># Devices</th>
						</tr>
					</thead>
				</table>
			</div>
		</div>
	</div>
</div>
<?php if($this->authorization()->isPermitted('Gem::Labviews', 'delete', $gem_ns)) { ?>
<?php include(__DIR__ . "/pane/delete.phtml"); ?>
<?php } ?>
<?php $this->placeholder('content')->captureEnd(); ?>
