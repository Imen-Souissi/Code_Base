<?php include(__DIR__ . "/layout/layout.phtml"); ?>

<?php
$escaper = new Zend\Escaper\Escaper('utf-8');
$formatter = $this->formatter();
?>

<?php $this->placeholder('heading')->captureStart(); ?>
Service Requests
<?php $this->placeholder('heading')->captureEnd() ;?>

<?php $this->placeholder('header')->captureStart('SET'); ?>
<div class="row" style="height: 30px;">
	<div class="col-sm-4">
		<h1>
			Service Requests
		</h1>
	</div>
	<div class="col-sm-8">
		<a class="btn btn-primary btn-xs pull-right"
		   href="<?php echo $this->basePath('ticket/service-requests/request/'); ?>">
			Submit new Request
		</a>
	</div>
</div>
<?php $this->placeholder('header')->captureEnd(); ?>

<?php
	$query_fields = array(
		'system_id' => 'system_id',
		'status_id' => 'status_id',
		'hr_contact_id' => 'hr_contact_id',
	);
	$query = array();
	$device_query = array();
	$displays = array(
		'system_id' => array(
			'placeholder' => true,
			'display' => 'System',
		),
		'status_id' => array(
			'placeholder' => true,
			'display' => 'Status',
		),
		'hr_contact_id' => array(
			'placeholder' => true,
			'display' => 'Contact'
		),
	);

	foreach($query_fields as $field => $field_id) {
		$options = array();
		$always_include = false;

		if(is_array($field_id)) {
			if(isset($field_id['always_include'])) {
				$always_include = $field_id['always_include'];
			}

			$options = $field_id;
			$field_id = $options['field'];
		}

		$options = (empty($options)) ? array() : $options;

		if(!is_string($field)) {
			$field = $field_id;
		}

		if($this->$field || $always_include) {
			$value = $this->$field;
			$query[$field] = $value;

			if($options['formatter']) {
				$value = call_user_func($options['formatter'], $value);
			}

			$device_query[] = "{$field_id}={$value}";
		}
	}

	$urldata = array(
		'route' => 'ticket/default',
		'match' => array (
			'controller' => 'service-requests',
			'action' => 'index',
		),
		'query' => $query
	);
?>

<?php $this->placeholder('script')->captureStart(); ?>
<script type="text/javascript" src="<?php echo $this->basePath('assets/js/iframeResizer.contentWindow.min.js'); ?>"></script>
<script type="text/javascript">
	$(document).ready(function() {
		// initilize the sidebar2
		$('#sidebar2').insertBefore('.page-content');//.ace_sidebar('collapse', false);
		$('#navbar').addClass('h-navbar');
		$('.footer').insertAfter('.page-content');
		$('.page-content').addClass('main-content');
		$('.menu-toggler[data-target="#sidebar2"]').insertBefore('.navbar-brand');
		$('#sidebar2[data-sidebar-hover=true]').ace_sidebar_hover('reset');
		$('#sidebar2[data-sidebar-scroll=true]').ace_sidebar_scroll('reset', true);

		// when the filter expressions is hidden/shown
		$('#filter_expressions').collapse().on('hidden.bs.collapse shown.bs.collapse', function (e) {
			$(this).css('display', 'block');
		}).on('hide.bs.collapse show.bs.collapse', function(e) {
			if (e.type == 'hide') {
				$('#filter_expressions_icon').removeClass('fa-minus').addClass('fa-plus');
				$('#filter_expressions_word').html('Show');
			} else {
				$('#filter_expressions_icon').removeClass('fa-plus').addClass('fa-minus');
				$('#filter_expressions_word').html('Hide');
			}
		});

		// build the dynamic column definitions
		var tableFields = <?php echo $this->json($this->table_columns); ?>;
		var tableColumns = buildTableColumns(tableFields);
		var tableSort = buildTableSort(tableFields);

		// now hook dynamic update to update th naming and column definition
		updateTableHeaders(tableFields);

		var initialSearch = "<?php echo $escaper->escapeJs($this->keywords); ?>";
		var table = $("#service_requests").DataTable({
			processing: true,
			serverSide: true,
			ajax: {
				data: function(d) {
					$.datatables_utils.normalize_data(d);

					var field = $('#field').val();
					if (field) {
						d['search']['fields'][0] = field;
					}

					var status_id = $('#status_id').val();
					if (status_id !== null) {
						d['status_id'] = status_id;
					}
				},
				<?php if (!empty($device_query)) { ?>
				url: "<?php echo $this->basePath('ticket/rest/systems/' . $this->system_id . '/service-requests/?' . implode('&', $device_query)); ?>"
				<?php } else { ?>
				url: "<?php echo $this->basePath('ticket/rest/systems/' . $this->system_id . '/service-requests/'); ?>"
				<?php } ?>
			},
			oLanguage: {
				sEmptyTable: "No service requests matched",
				sProcessing: "",
				sSearch: "Search",
				sSearchPlaceholder: "Search service requests"
			},
			oSearch: {
				sSearch: "<?php echo $escaper->escapeJs($this->keywords); ?>"
			},
			iDisplayLength: 25,
			stateSave: false,
			deferRender: true,
			responsive: {
				details: {
					renderer: function(api, row, columns) {
						return $.datatables_utils.responsive_renderer(api, row, columns, table);
					}
				}
			},
			columns: tableColumns,
			order: tableSort,
			fnPreDrawCallback: function() {
				$("#service_requests_info").html("Loading service requests...");
				return true;
			},
			fnInitComplete: function() {
				<?php
					$field_name = '';
					switch($this->field) {
						case 'number':
							$field_name = 'Number';
							break;
						case 'title';
							$field_name = 'Title';
							break;
					}
				?>
				var api = $(this).dataTable().api();
				var html = '<form id="search_form" class="form-horizontal" method="get">';
					html += '<div class="form-group">';
						html += '<div class="input-group">';
							html += '<input type="hidden" name="field" id="search_field" value="<?php echo $this->field; ?>" />';
							html += '<input type="text" class="keyword" name="keywords" value="<?php echo $escaper->escapeHtml($this->keywords); ?>" placeholder="Search keywords (number, title, etc.)" />';
							html += '<span class="input-group-btn">';
								html += '<div class="btn-group">';
									html += '<button class="btn btn-xs btn-primary" type="submit">Search <?php echo $field_name; ?></button>';
									html += '<button data-toggle="dropdown" class="btn btn-xs btn-primary dropdown-toggle">';
										html += '<span class="bigger-110 ace-icon fa fa-caret-down icon-only"></span>';
									html += '</button>';
									html += '<ul class="dropdown-menu dropdown-blue" style="right: 0; left: auto;">';
										html += '<li><a href="javascript: searchField();">All</a></li>';
										html += '<li><a href="javascript: searchField(\'number\');">Number</a></li>';
										html += '<li><a href="javascript: searchField(\'title\');">Title</a></li>';
									html += '</ul>';
								html += '</div>';
							html += '</span>';
						html += '</div>';
					html += '</div>';
				html += "</form>";

				$("#service_requests_filter").html(html);

				$.validate_utils.create('#search_form', {}, function(form) {
					$($(form).serializeArray()).each(function(i, item) {
						if (item.name == 'keywords') {
							$('#keywords').val(item.value);
						} else if (item.name == 'field') {
							$('#field').val(item.value);
						}
					});

					// submit the filter form
					$('#filter').submit();

					return false;
				});
			}
		});

		$('#status_id').select2({});

		// initialize the complex selects
		var selects = [
			<?php if ($this->authorization()->isPermitted('Ticket::Systems', 'view')) { ?>
			{
				id: 'system_id',
				url: '<?php echo $this->basePath("ticket/rest/systems/"); ?>',
				onData: function(data) {
					data['is_active'] = 1;
				},
				onInitData: function(item) {
					$('#system_id_display').text(item.name);
				}
			},
			<?php } ?>
			<?php if ($this->authorization()->isPermitted('Ticket::ServiceRequests', 'access-all')) { ?>
			{
				id: 'hr_contact_id',
				url: '<?php echo $this->basePath('hr/rest/hr-users/'); ?>',
				onData: function(data) {
					data['terminated'] = 0;
				},
				onInitData: function(item) {
					$('#hr_contact_id_display').text(item.display_name);
				},
				display: 'display_name'
			}
			<?php } ?>
		];

		if (selects.length > 0) {
			$.select2_utils.create(selects, 25);
		}
	});

	function buildTableSort(fields) {
		var offset = 2;
		var sort = [];
		var field_index = {
			submit_date: -1
		};

		$(fields).each(function(i, field) {
			if (field['field'] == 'submit_date') {
				field_index['submit_date'] = i + offset;
			}
		});

		for(var field in field_index) {
			if (field_index[field] > -1) {
				sort.push([field_index[field], 'asc']);
			}
		}

		return sort;
	}

	function buildTableColumns(fields) {
		var column_definitions = {
			number: { data: 'number', searchable: true, render: function(val, type, data) {
				val = (val == null || val == '') ? 'N/A' : val;

				<?php if($this->authorization()->isPermitted('Ticket::ServiceRequests', 'view')) { ?>
				return "<a href='<?php echo $this->basePath('ticket/service-requests/view/'); ?>" + data.id + "'>" + val + "</a>";
				<?php } else { ?>
				return val;
				<?php } ?>
			}, className: 'all' },
			title: { data: 'title', searchable: true, render: function(val, type, data) {
				val = val || '';

				if (val.length > 128) {
					return val.substring(0, 128).trim() + '...';
				}

				return val;
			} },
			status: { data: 'status', searchable: true },
			contact: { data: 'contact', searchable: true },
			submit_date: { data: 'submit_date', searchable: false, render: $.datatables_utils.format_date }
		};

		var columns = [
			{ data: 'id', orderable: false, searchable: false, render: $.datatables_utils.format_empty, className: 'control' },
			{ data: 'id', orderable: false, searchable: false, render: function(val, type, data, options) {
				return "<div class='inline pos-rel'>"
						+ "<button class='btn btn-minier btn-yellow dropdown-toggle' data-toggle='dropdown' data-position='auto'>"
							+ "Actions "
							+ "<i class='ace-icon fa fa-caret-down icon-only bigger-120'></i>"
						+ "</button>"
						+ "<ul class='dropdown-menu dropdown-only-icon dropdown-yellow dropdown-menu-right dropdown-caret dropdown-close'>"
							<?php if($this->authorization()->isPermitted('Ticket::ServiceRequests', 'view')) { ?>
							+ "<li>"
								+ "<a data-rel='tooltip' href='<?php echo $this->basePath('ticket/service-requests/view/'); ?>" + val + "'>"
									+ "<span class='green'>"
										+ "<i class='ace-icon fa fa-image bigger-120'></i>"
										+ " View"
									+ "</span>"
								+ "</a>"
							+ "</li>"
							<?php } ?>
							<?php if($this->authorization()->isPermitted('Ticket::Tickers', 'edit')) { ?>
							+ "<li>"
								+ "<a data-rel='tooltip' href='<?php echo $this->basePath('ticket/service-requests/edit/'); ?>" + val + "'>"
									+ "<span class='blue'>"
										+ "<i class='ace-icon fa fa-edit bigger-120'></i>"
										+ " Edit"
									+ "</span>"
								+ "</a>"
							+ "</li>"
							<?php } ?>
						+ "</ul>"
					+ "</div>";
			}, className: 'action-col all' }
		];

		// place the columns in as the sort
		$(fields).each(function(i, field) {
			if (column_definitions[field['field']]) {
				var definition = column_definitions[field['field']];

				if (field.show == 'HIDDEN') {
					definition.className = (definition.className) ? (definition.className + ' none') : 'none';
				} else if (field.show == 'ALWAYS') {
					definition.className = (definition.className) ? (definition.className + ' all') : 'all';
				}

				columns.push(definition);
			}
		});

		return columns;
	}

	function updateTableHeaders(fields) {
		$(fields).each(function(i, field) {
			$('#' + field['field'] + '_th').html(field['display']);
		});
	}

	function resetFilter() {
		// grab all the fields from the form
		$($("#filter").serializeArray()).each(function(i, info) {
			if (info.name == 'iframe') {
				return;
			}

			var ele = $("#filter [name=" + info.name + "]");
			if ($(ele).data('select2')) {
				$(ele).select2('val', null);
			} else {
				$(ele).val(null);
			}
		});

		$("#filtering").val(1);
		$("#filter").submit();
	}

	function searchField(field) {
		$('#search_field').val(field);
		$('#search_form').submit();
	}
</script>
<?php $this->placeholder('script')->captureEnd(); ?>

<?php $this->placeholder('style')->captureStart(); ?>
<style type="text/css">
	#devices_filter input.input-sm {
		width: 380px;
	}
	@media (min-width: 768px) {
		input.keyword {
			width: 350px !important;
		}
	}
</style>

<?php $this->placeholder('style')->captureEnd(); ?>

<?php $this->placeholder('content')->captureStart('SET'); ?>
<div class="hidden">
	<button data-target="#sidebar2" type="button" class="pull-left menu-toggler navbar-toggle" title="Show filter options">
		<span class="sr-only">Toggle sidebar</span>
		<i class="ace-icon fa fa-filter white bigger-125"></i>
	</button>
	<div id="sidebar2" class="sidebar responsive">
		<div class="sidebar-toggle sidebar-collapse">
			<i class="ace-icon fa fa-angle-double-left" data-icon1="ace-icon fa fa-angle-double-left" data-icon2="ace-icon fa fa-angle-double-right"></i>
		</div>
		<div class="space-6"></div>

		<form id="filter" action="<?php echo $this->url($urldata['route'], $urldata['match']); ?>" method="get" <?php echo ($this->iframe == 1) ? 'target="_parent"' : ''; ?> class="">
			<input type="hidden" name="filtering" id="filtering" value="1" />
			<input type="hidden" name="field" id="field" value="<?php echo $this->field; ?>" />
			<input type="hidden" name="keywords" id="keywords" value="<?php echo $escaper->escapeHtml($this->keywords); ?>" />

			<?php if ($this->authorization()->isPermitted('Ticket::Systems', 'view')) { ?>
			<div class="form-group">
				<label class=control-label" for="system_id">System</label>
				<input name="system_id"
					   id="system_id"
					   type="hidden"
					   placeHolder="System"
					   value="<?php echo $this->system_id; ?>"
					   class="scrollable width-100" />
			</div>
			<?php } ?>

			<?php if ($this->authorization()->isPermitted('Ticket::ServiceRequests', 'access-all')) { ?>
			<div class="form-group">
				<label class=control-label" for="hr_contact_id">Contact</label>
				<input name="hr_contact_id"
					   id="hr_contact_id"
					   type="hidden"
					   placeHolder="Contact"
					   value="<?php echo $this->hr_contact_id; ?>"
					   class="scrollable width-100" />
			</div>
			<?php } else { ?>
			<input type="hidden" name="hr_contact_id" value="<?php echo $this->hr_contact_id; ?>" />
			<?php } ?>

			<div class="form-group">
				<label class=control-label" for="status_id">Status</label>
				<select id="status_id"
						name="status_id"
						placeHolder="Status"
						class="align-left"
						style="width: 180px;">
					<optgroup label="Multiple">
						<option value="-1" <?php echo (intval($this->status_id) === -1) ? 'selected="selected"' : ''; ?>>All</option>
						<option value="0" <?php echo (intval($this->status_id) === 0) ? 'selected="selected"' : ''; ?>>Active Only</option>
					</optgroup>
					<optgroup label="Statuses">
						<?php foreach($this->statuses as $status) { ?>
						<option value="<?php echo $status['id']; ?>" <?php echo ($status['id'] == $this->status_id) ? 'selected="selected"' : ''; ?>><?php echo $status['name']; ?></option>
						<?php } ?>
					</optgroup>
				</select>
			</div>

			<div class="form-group align-center">
				<button class="btn btn-xs"
						type="button"
						onclick="resetFilter()">
					<i class="ace-icon fa fa-remove align-top bigger-125"></i>
					Reset
				</button>
				<button class="btn btn-xs btn-primary"
						type="submit">
					<i class="ace-icon fa fa-check align-top bigger-125"></i>
					Filter
				</button>
				<a class="btn btn-xs btn-link"
				   href="#more_filter_options_modal"
				   data-toggle="modal">
					<i class="ace-icon fa fa-plus-square-o bigger-125"></i>
					More Options
				</a>
			</div>
		</form>
	</div>
</div>

<?php if (count($device_query) > 0) { ?>
<div class="row no-margin">
	<a href="#filter_expressions" data-toggle="collapse"><i class="ace-icon fa fa-plus" id="filter_expressions_icon"></i> <span id="filter_expressions_word">Show</span> Filter Expressions</a>
	<div id="filter_expressions" class="collapse in col-sm-12" style="display: none; padding-left: 30px;">
		<?php if ($query) { ?>
			<ul class="list-inline">
			<?php foreach($query as $field => $value) { ?>
				<?php
					$field_display = ($displays[$field]['display']) ? $displays[$field]['display'] : ucwords(str_replace('_', ' ', $field));
					$field_expr = ($displays[$field]['expression']) ? $displays[$field]['expression'] : 'equal';
					$field_placeholder = ($displays[$field]['placeholder']) ? $displays[$field]['placeholder'] : null;
					if($displays[$field]['ignore'] === true) {
						continue;
					}
				?>
				<li>
					<?php if ($displays[$field]['formatter']) { ?>
						<?php
							$ret_value = $displays[$field]['formatter']($value, $this);
							if(!empty($ret_value)) {  ?>
								<i class="ace-icon fa fa-angle-double-right blue"></i>
								<?php echo $ret_value; ?>
							<?php } ?>
					<?php } else { ?>
						<i class="ace-icon fa fa-angle-double-right blue"></i>
						<?php
							if($displays[$field]['placeholder'] === true) {
								$value = "<span id='{$field}_display'></span>";
							}
							echo $this->queryExpression()->format($field_display, $field_expr, $value);
						?>
					<?php } ?>
				</li>
			<?php } ?>
			</ul>
		<?php } ?>
	</div>
</div>
<?php } ?>

<div class="widget-body no-padding">
	<div class="widget-table no-padding">
		<table id="service_requests" class="table table-striped table-hover" width="100%">
			<thead>
				<tr>
					<th style="width: 30px;"></th>
					<th style="min-width: 40px; max-width: 40px;"></th>
					<?php
						$field_width = array(
							'number' => '80px',
							'title' => '200px',
							'status' => '80px',
						)
					?>
					<?php foreach($this->table_columns as $column) { ?>
						<?php $width = ($field_width[$column['field']]) ? $field_width[$column['field']] : '100px'; ?>
						<th style="min-width: <?php echo $width; ?>;" id="<?php echo $column['field']; ?>_th">
							<?php echo $column['display']; ?>
						</th>
					<?php } ?>
				</tr>
			</thead>
			<tfoot>
				<td></td>
				<td></td>
				<?php foreach($this->table_columns as $column) { ?>
					<td></td>
				<?php } ?>
			</tfoot>
		</table>
	</div>
</div>

<?php $this->placeholder('content')->captureEnd(); ?>
