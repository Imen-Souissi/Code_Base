<?php $this->placeholder('script')->captureStart(); ?>
<script type="text/javascript">
	$(document).ready(function() {
		$.validate_utils.create('#configure_columns', {}, function(form) {
			var type = 'update';
			$($(form).serializeArray()).each(function(i, item) {
				if (item['name'] == 'type') {
					type = item['value'];
				}
			});

			if (type == 'reset') {
				$("#configure_columns_message")
					.show()
					.removeClass("label-success")
					.removeClass("label-danger")
					.addClass("label-default")
					.html("Resetting column configurations...");

				$.ajax({
					type: 'POST',
					url: '<?php echo $this->basePath('application/tables/reset-user-columns/' . $this->table['id']); ?>',
					data: {
						table_id: '<?php echo $this->table['id']; ?>'
					}
				}).done(function(data) {
					$("#configure_columns_message")
						.removeClass("label-default")
						.addClass("label-success")
						.html("Successfully reset column configurations");

					window.location = window.location.href;
				}).fail(function(error) {
					if (error.responseJSON && error.responseJSON['error']) {
						error = error.responseJSON['error'];
					} else {
						error = 'Unable to reset column configurations, try again';
					}

					$("#configure_columns_message")
						.removeClass("label-default")
						.addClass("label-danger")
						.html(error);
				});
			} else {
				$("#configure_columns_message")
					.show()
					.removeClass("label-success")
					.removeClass("label-danger")
					.addClass("label-default")
					.html("Saving column configurations...");

				var columns = $('#configure_columns_table').DataTable().data();

				$.ajax({
					type: 'POST',
					url: '<?php echo $this->basePath('application/tables/edit-user-columns/' . $this->table['id']); ?>',
					data: JSON.stringify(columns),
					contentType: 'application/json'
				}).done(function(data) {
					$("#configure_columns_message")
						.removeClass("label-default")
						.addClass("label-success")
						.html("Successfully saved column configurations");

					window.location = window.location.href;
				}).fail(function(error) {
					if (error.responseJSON && error.responseJSON['error']) {
						error = error.responseJSON['error'];
					} else {
						error = 'Unable to save column configurations, try again';
					}

					$("#configure_columns_message")
						.removeClass("label-default")
						.addClass("label-danger")
						.html(error);
				});
			}

			return false;
		});

		$('#configure_columns_modal').on('shown.bs.modal', function() {
			var table;

			if (!$('#configure_columns_table').data('DataTables')) {
				table = $("#configure_columns_table").DataTable({
					ajax: {
						data: function(d) {
							$.datatables_utils.normalize_data(d);
						},
						url: "<?php echo $this->basePath('application/rest/tables/' . $this->table['id'] . '/user-columns/'); ?>"
					},
					oLanguage: {
						sEmptyTable: "No columns matched",
						sProcessing: ""
					},
					scrollY: '40vh',
					scrollCollapse: true,
					paging: false,
					info: false,
					bFilter: false,

					// turn state save off so that it does not override the keyword
					stateSave: false,
					deferRender: true,
					columns: [
						{ data: 'field_display', orderable: false },
						{ data: 'display', orderable: false, render: function(val, type, data, options) {
							return '<input type="text" value="' + val + '" class="display_cls" data-row="' + options.row + '" data-column_id="' + data['id'] + '" />';
						} },
						{ data: 'show', orderable: false, render: function(val, type, data, options) {
							var html = '<select class="show_cls" data-row="' + options.row + '" data-column_id="' + data['id'] + '">';
								html += '<option value="DYNAMIC" ' + (val == 'DYNAMIC' ? 'selected="selected"' : '') + '>Dynamic</option>';
								html += '<option value="ALWAYS" ' + (val == 'ALWAYS' ? 'selected="selected"' : '') + '>Always</option>';
								html += '<option value="HIDDEN" ' + (val == 'HIDDEN' ? 'selected="selected"' : '') + '>Hidden</option>';
							html += '</select>';

							return html;
						} },
						{ data: 'sort', orderable: false, render: function(val, type, data, options) {
							var total = table.data().count();
							val = parseInt(val, 10);

							var html = '';

							if (val > 0) {
								// show the up button
								html += '<a href="javascript: void(0);" class="sort_cls pull-left" data-sort="' + val + '"  data-row="' + options.row + '" data-column_id="' + data['id'] + '" data-dir="-1" title="Move up"><i class="ace-icon fa fa-angle-double-up"></i></a>&nbsp;';
							} else {
								html += '&nbsp;';
							}

							if (val < total - 1) {
								// show the down button
								html += '&nbsp;<a href="javascript: void(0);" class="sort_cls pull-right" data-sort="' + val + '"  data-row="' + options.row + '" data-column_id="' + data['id'] + '" data-dir="1" title="Move down"><i class="ace-icon fa fa-angle-double-down"></i></a>';
							} else {
								html += '&nbsp;';
							}

							return html;
						} }
					],
					order: [
						[3, 'asc']
					],
					fnDrawCallback: function() {
						$("#configure_columns_table a.sort_cls").off('click.gem');
						$("#configure_columns_table input.display_cls").off('change.gem');
						$("#configure_columns_table input.show_cls").off('change.gem');

						$("#configure_columns_table a.sort_cls").on('click.gem', function(e) {
							var total = table.data().count();
							var row = $(this).data('row');
							var col = 3;
							var val = parseInt($(this).data('sort'));
							var dir = parseInt($(this).data('dir'), 10);

							val = val + dir;

							if (val >= total) {
								val = total - 1;
							} else if (val < 0) {
								val = 0;
							}

							var columns = table.data();
							if (columns[row]) {
								columns[row]['sort'] = val + "";
							}

							if (columns[val]) {
								columns[val]['sort'] = columns[val]['sort'] - dir;
							}

							columns = sortColumns(columns);

							table.clear();
							table.rows.add(columns);
							table.draw();
						});
						$('#configure_columns_table input.display_cls').on('change.gem', function(e) {
							var row = $(this).data('row');
							var col = 1;
							var val = $(this).val();

							var data = table.rows(row).data()[0];
							data['display'] = val;
						});
						$('#configure_columns_table select.show_cls').select2({
							minimumResultsForSearch: -1
						}).on('change.gem', function(e) {
							var row = $(this).data('row');
							var col = 2;
							var val = $(this).select2('val');

							var data = table.rows(row).data()[0];
							data['show'] = val;
						});
					}
				});
			} else {
				table = $("#configure_columns_table").DataTable();
				// reload the table
				table.ajax.reload();
			}
		});
	});

	function sortColumns(columns) {
		return columns.sort(function(a, b) {
			var asort = parseInt(a['sort'], 10);
			var bsort = parseInt(b['sort'], 10);

			return asort - bsort;
		});
	}
</script>
<?php $this->placeholder('script')->captureEnd(); ?>

<div id="configure_columns_modal" class="modal fade" tabindex="-1">
	<div class="modal-dialog" style="width: 800px;">
		<div class="modal-content">
			<div class="modal-header no-padding">
				<div class="table-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">
						<span class="white">&times;</span>
					</button>
					Configure Columns
				</div>
			</div>
			<form id="configure_columns" class="form-horizontal">
				<div class="modal-body">
					<div class="row">
						<div class="col-xs-12">
							<div class="alert alert-warning no-margin">
								Configure the <strong>Product</strong> table definition to prioritize what you like to see!
							</div>
							<div class="widget-body no-padding">
								<div class="widget-table no-padding">
									<table id="configure_columns_table" class="table table-striped table-hover" width="100%" style="border-top: none;">
										<thead>
											<tr>
												<th style="max-width: 200px;">Field</th>
												<th>Display</th>
												<th style="max-width: 150px;">Show</th>
												<th style="max-width: 55px;"></th>
											</tr>
										</thead>
									</table>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="modal-footer align-left">
					<div>
						<a class="btn btn-sm" href="#" data-dismiss="modal" aria-hidden="true">
							<i class="ace-icon fa fa-remove bigger-125"></i>
							Cancel
						</a>
						<button class="btn btn-sm btn-danger"
								type="submit"
								name="type"
								value="reset"
								title="Clear all personal settings and start new">
							<i class="ace-icon fa fa-unlink bigger-125"></i>
							Reset
						</button>
						<button class="btn btn-sm btn-primary"
								name="type"
								value="update"
								type="submit">
							<i class="ace-icon fa fa-check bigger-125"></i>
							Update
						</button>
					</div>
					<div class="space-4"></div>
					<div id="configure_columns_message" style="display: none;" class="align-left label label-default"></div>
				</div>
			</form>
		</div>
	</div>
</div>
